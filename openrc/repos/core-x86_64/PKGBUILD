# Maintainer: artoo <artoo@artixlinux.org>
# Maintainer: Chris Cromer <cromer@artixlinux.org>
# Contributor: williamh <williamh@gentoo.org>

_url="https://github.com/OpenRC/openrc/archive"

pkgbase=openrc
pkgname=('openrc' 'openrc-bash-completions' 'openrc-zsh-completions')
pkgver=0.42.1
pkgrel=2
pkgdesc="Gentoo's universal init system"
arch=('x86_64')
url="http://www.gentoo.org/proj/en/base/openrc/"
license=('BSD2')
makedepends=('psmisc' 'pam' 'netifrc' 'opentmpfiles-openrc'
            'opensysusers-openrc' 'elogind-openrc' 'zsh')
source=("${pkgbase}-${pkgver}.tar.gz::${_url}/${pkgver}.tar.gz"
        "${pkgbase}.logrotate"
        'openrc-hook'
        'openrc-install.hook'
        'openrc-upgrade.hook'
        'openrc-remove.hook'
        'sysctl.hook'
        'sysctl.conf'
        'binfmt.hook')
sha256sums=('91a01ca6d930a0688fb91338209985de57cac7aa2d37feddacb78fd3d95308e2'
            '0b44210db9770588bd491cd6c0ac9412d99124c6be4c9d3f7d31ec8746072f5c'
            'eb5d05a733d3dd16682397c92a8bafe548b10c019ab15c0fab69583d78a5f46e'
            '385d16b3133b53c459a3910a739304cd009478e37b5550f4ce698f7deea774f0'
            '3ef8682540a038c239c4e07881cb084501d7996df2e0395b70a0a3953c7d00b2'
            'a636d63fa753420cfbcaf451f97f68897e98d471a6f516b8edc14f509e42c013'
            'cb5bc649c2c9998300aff1e9862a9404b44e53178d153d68288603e99c5aaefe'
            '4170bcf3655ff6fb32b35fc592a4294a64d25df98d2f0f09f467689ed1ad54ea'
            '080cd9e1922e5c893adad10849e1dcc8a1ee2e1b49d6d1d18441f83a6960ae91')

_args=(
    SYSCONFDIR=/etc
    PREFIX=/usr
    SBINDIR=/usr/bin
    LIBEXECDIR=/usr/lib/openrc
    MKSELINUX=no
    MKPAM=pam
    MKTERMCAP=ncurses
    MKNET=no
    MKSYSVINIT=no
    MKBASHCOMP=yes
    MKZSHCOMP=yes
    MKPKGCONFIG=yes
)

if [ -f /usr/lib/os-release ]; then
    . /usr/lib/os-release
    _args+=(BRANDING="${NAME}")
else
    _args+=(BRANDING='Unknown Linux')
fi

prepare(){
    cd "${srcdir}/${pkgbase}-${pkgver}"
    sed -i 's:0444:0644:' mk/sys.mk
}

check(){
    cd "${srcdir}/${pkgbase}-${pkgver}"
    make -k check
}

build(){
    cd "${srcdir}/${pkgbase}-${pkgver}"
    make "${_args[@]}"
}

package_openrc() {
    depends=('psmisc' 'pam' 'opentmpfiles-openrc' 'opensysusers-openrc' 'netifrc' 'elogind-openrc')
    optdepends=('networkmanager-openrc: NetworkManager')
    install=${pkgname}.install
    backup=('etc/rc.conf'
            'etc/conf.d/consolefont'
            'etc/conf.d/keymaps'
            'etc/conf.d/hostname'
            'etc/conf.d/modules'
            'etc/conf.d/hwclock'
            etc/conf.d/agetty.tty{1,2,3,4,5,6})
    provides=('svc-manager')
    conflicts=('svc-manager')

    cd "${srcdir}/${pkgbase}-${pkgver}"

    make DESTDIR="${pkgdir}" "${_args[@]}" install

    install -Dm644 "${srcdir}/${pkgbase}.logrotate" "${pkgdir}/etc/logrotate.d/${pkgbase}"

    sed -e 's/#unicode="NO"/unicode="YES"/' \
        -e 's/#rc_logger="NO"/rc_logger="YES"/' \
        -e 's/#rc_controller_cgroups="YES"/rc_controller_cgroups="YES"/' \
        -e 's|#rc_shell=/bin/sh|rc_shell=/usr/bin/sulogin|' \
        -i "${pkgdir}/etc/rc.conf"

    install -d ${pkgdir}/usr/lib/{openrc/cache,binfmt.d,sysctl.d}

    # getty
    sed -e 's|#baud=""|baud="38400"|' \
        -e 's|#term_type="linux"|term_type="linux"|' \
        -e 's|#agetty_options=""|agetty_options=""|' \
        -i ${pkgdir}/etc/conf.d/agetty

    for num in 1 2 3 4 5 6;do
        cp -v ${pkgdir}/etc/conf.d/agetty ${pkgdir}/etc/conf.d/agetty.tty$num
        ln -sf /etc/init.d/agetty ${pkgdir}/etc/init.d/agetty.tty$num
        ln -sf /etc/init.d/agetty.tty$num ${pkgdir}/etc/runlevels/default/agetty.tty$num
    done

    # sysctl defaults
    install -m755 ${srcdir}/sysctl.conf "$pkgdir"/usr/lib/sysctl.d/50-default.conf

    # pacman hooks
    install -Dm755 ${srcdir}/openrc-hook "$pkgdir"/usr/share/libalpm/scripts/openrc-hook
    install -Dm644 -t "$pkgdir"/usr/share/libalpm/hooks ${srcdir}/*.hook

    # license
    install -Dm644 ${srcdir}/${pkgname}-${pkgver}/LICENSE "$pkgdir/usr/share/licenses/${pkgbase}/LICENSE"

    # split bash completions
    install -d ${srcdir}/_bash-completion/usr/share/bash-completion/completions
    mv -v ${pkgdir}/usr/share/bash-completion/completions/* ${srcdir}/_bash-completion/usr/share/bash-completion/completions

    # split zsh completions
    install -d ${srcdir}/_zsh/usr/share/zsh/site-functions
    mv -v ${pkgdir}/usr/share/zsh/site-functions/* ${srcdir}/_zsh/usr/share/zsh/site-functions
}

package_openrc-bash-completions() {
    depends=('openrc' 'bash')
    pkgdesc="OpenRC completions for Bash"

    mv -v ${srcdir}/_bash-completion/* ${pkgdir}
}

package_openrc-zsh-completions() {
    depends=('openrc' 'zsh')
    pkgdesc="OpenRC completions for ZSH"

    mv -v ${srcdir}/_zsh/* ${pkgdir}
}
